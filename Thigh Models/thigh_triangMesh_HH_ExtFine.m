function out = model
%
% thigh_triangMesh_HH_ExtFine.m
%
% Model exported on Oct 8 2024, 14:58 by COMSOL 6.2.0.290.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('G:\Mi unidad\Doctorado\Electrodos\Interferential\standard50Hz');

model.comments(['Untitled' newline  newline ]);

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 3);

model.component('comp1').mesh.create('mesh1');

model.component('comp1').physics.create('ec', 'ConductiveMedia', 'geom1');

model.study.create('std1');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').activate('ec', true);

model.component('comp1').geom('geom1').label('Thigh');
model.component('comp1').geom('geom1').lengthUnit('cm');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').scaleUnitValue(true);
model.component('comp1').geom('geom1').run('');
model.component('comp1').geom('geom1').create('cyl1', 'Cylinder');
model.component('comp1').geom('geom1').feature('cyl1').set('r', '2.5/2');
model.component('comp1').geom('geom1').feature('cyl1').set('h', 7);
model.component('comp1').geom('geom1').feature('cyl1').set('pos', [8 7.5 0]);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('cyl1');
model.component('comp1').geom('geom1').create('cyl2', 'Cylinder');
model.component('comp1').geom('geom1').feature('cyl2').set('r', '0.72/2');
model.component('comp1').geom('geom1').feature('cyl2').set('h', 7);
model.component('comp1').geom('geom1').feature('cyl2').set('pos', [7.6 3 0]);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('cyl2');
model.component('comp1').geom('geom1').feature.create('wp1', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp1').set('unite', true);
model.component('comp1').geom('geom1').feature('wp1').geom.create('c1', 'Circle');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('c1').set('r', 7);
model.component('comp1').geom('geom1').feature('wp1').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('c1').set('pos', [8 0]);
model.component('comp1').geom('geom1').feature('wp1').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('c1').set('pos', [8 8]);
model.component('comp1').geom('geom1').feature('wp1').geom.run('c1');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('wp1');
model.component('comp1').geom('geom1').feature.create('ext1', 'Extrude');
model.component('comp1').geom('geom1').feature('ext1').set('workplane', 'wp1');
model.component('comp1').geom('geom1').feature('ext1').selection('input').set({'wp1'});
model.component('comp1').geom('geom1').feature('ext1').setIndex('distance', 7, 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('ext1');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'ext1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'cyl1' 'cyl2'});
model.component('comp1').geom('geom1').feature.remove('dif1');
model.component('comp1').geom('geom1').run('ext1');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'ext1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'cyl1' 'cyl2'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature.duplicate('cyl3', 'cyl1');
model.component('comp1').geom('geom1').feature.duplicate('cyl4', 'cyl2');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature.remove('cyl4');
model.component('comp1').geom('geom1').feature.remove('cyl3');
model.component('comp1').geom('geom1').feature.duplicate('wp2', 'wp1');
model.component('comp1').geom('geom1').feature('wp2').geom.feature('c1').set('r', 7.5);
model.component('comp1').geom('geom1').feature('wp2').geom.run('c1');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('wp2');
model.component('comp1').geom('geom1').feature.create('ext2', 'Extrude');
model.component('comp1').geom('geom1').feature('ext2').set('workplane', 'wp2');
model.component('comp1').geom('geom1').feature('ext2').selection('input').set({'wp2'});
model.component('comp1').geom('geom1').feature('ext2').setIndex('distance', 7, 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('ext2');
model.component('comp1').geom('geom1').create('dif2', 'Difference');
model.component('comp1').geom('geom1').feature('dif2').selection('input').set({'ext2'});
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'dif1'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').runPre('dif2');
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'dif1'});
model.component('comp1').geom('geom1').feature('dif2').selection('input2').init;
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'dif1'});
model.component('comp1').geom('geom1').feature('dif2').selection('input2').init;
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'dif1'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('cyl1');
model.component('comp1').geom('geom1').run('cyl2');
model.component('comp1').geom('geom1').run('wp1');
model.component('comp1').geom('geom1').run('ext1');
model.component('comp1').geom('geom1').feature('dif1').set('keep', true);
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').feature.remove('dif2');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature.duplicate('dif2', 'dif1');
model.component('comp1').geom('geom1').feature('dif2').selection('input').init;
model.component('comp1').geom('geom1').feature('dif2').selection('input').set({'ext2'});
model.component('comp1').geom('geom1').feature('dif2').selection('input').init;
model.component('comp1').geom('geom1').feature('dif2').selection('input').set({'ext2'});
model.component('comp1').geom('geom1').feature('dif2').selection('input2').set({'cyl1' 'cyl2' 'ext1'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').physics('ec').create('ncd1', 'NormalCurrentDensity', 2);

model.component('comp1').geom('geom1').feature.duplicate('wp3', 'wp2');
model.component('comp1').geom('geom1').feature('wp3').geom.feature('c1').set('r', 8);
model.component('comp1').geom('geom1').feature('wp3').geom.run('c1');
model.component('comp1').geom('geom1').run('wp3');
model.component('comp1').geom('geom1').feature.create('ext3', 'Extrude');
model.component('comp1').geom('geom1').feature('ext3').set('workplane', 'wp3');
model.component('comp1').geom('geom1').feature('ext3').selection('input').set({'wp3'});
model.component('comp1').geom('geom1').feature('ext3').setIndex('distance', 7, 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature.duplicate('dif3', 'dif2');
model.component('comp1').geom('geom1').feature('dif3').selection('input').init;
model.component('comp1').geom('geom1').feature('dif3').selection('input').set({'ext3'});
model.component('comp1').geom('geom1').feature('dif3').selection('input2').set({'cyl1' 'cyl2' 'dif2' 'ext1'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('dif3');
model.component('comp1').geom('geom1').feature.create('wp4', 'WorkPlane');
model.component('comp1').geom('geom1').feature('wp4').set('unite', true);
model.component('comp1').geom('geom1').feature('wp4').set('quickplane', 'xz');
model.component('comp1').geom('geom1').feature('wp4').geom.run('');
model.component('comp1').geom('geom1').feature('wp4').geom.create('c1', 'Circle');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('c1');
model.component('comp1').geom('geom1').feature('wp4').set('displ', [5 0]);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('displ', [5 5]);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('displ', [0 0]);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickoffsettype', 'distance');
model.component('comp1').geom('geom1').feature('wp4').set('quickplane', 'xy');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 1);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').geom.create('sq1', 'Square');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('size', 2);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('pos', [4 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', 15);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', -15);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('c1', 'Circle');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('c1').set('r', 8);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('c1').set('pos', [8 8]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('int1', 'Intersection');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('int1').selection('input').set({'c1' 'sq1'});
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', -45);
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', -25);
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', -30);
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', -20);
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('copy1', 'Copy');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').selection('input').set({'int1'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.05);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('disply', -0.004);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', 0);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('disply', -1);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('disply', -0.5);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('disply', -0.05);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('disply', -0.09);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.001);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.01);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.05);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.04);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.035);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('int2', 'Intersection');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('int2').selection('input').set({'copy1' 'int1'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('int2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('dif1').selection('input').set({'copy1'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('dif1').selection('input2').set({'int1'});
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.036);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.037);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.03);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.031);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.033);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.032);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.0325);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.0328);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.0327);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.03275);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.03277);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', -0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.create('copy2', 'Copy');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy2').selection('input').set({'dif1'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy2').set('displx', -0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy2').set('disply', -0.09);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').feature('wp4').geom.create('sq2', 'Square');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('size', 2);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [10 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [8 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [10 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('rot', -20);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('rot', 20);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.duplicate('c2', 'c1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('c2');
model.component('comp1').geom('geom1').feature('wp4').geom.create('int2', 'Intersection');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('int2').selection('input').set({'c2' 'sq2'});
model.component('comp1').geom('geom1').feature('wp4').geom.run('int2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('int2');
model.component('comp1').geom('geom1').feature('wp4').geom.create('copy3', 'Copy');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').selection('input').set({'int2'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').set('disply', 0.09);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').set('displx', 0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').set('displx', -0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').set('disply', -0.09);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy3').set('displx', 0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.create('dif2', 'Difference');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('dif2').selection('input').set({'copy3'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('dif2').selection('input2').set({'int2'});
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif2');
model.component('comp1').geom('geom1').feature('wp4').geom.create('copy4', 'Copy');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy4').selection('input').set({'dif2'});
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy4').set('displx', 0.03276);
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy4').set('disply', -0.09);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').run('wp4');
model.component('comp1').geom('geom1').feature.create('ext4', 'Extrude');
model.component('comp1').geom('geom1').feature('ext4').set('workplane', 'wp4');
model.component('comp1').geom('geom1').feature('ext4').selection('input').set({'wp4'});
model.component('comp1').geom('geom1').feature('ext4').setIndex('distance', 2, 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature.duplicate('wp5', 'wp4');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 4);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('wp5');
model.component('comp1').geom('geom1').feature.create('ext5', 'Extrude');
model.component('comp1').geom('geom1').feature('ext5').set('workplane', 'wp5');
model.component('comp1').geom('geom1').feature('ext5').selection('input').set({'wp5'});
model.component('comp1').geom('geom1').feature('ext5').setIndex('distance', 2, 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 5);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 4);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material('mat1').label('Bone');
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity', '1313[J/(kg*K)]');
model.component('comp1').material('mat1').propertyGroup('def').set('density', '1908[kg/m^3]');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity', {'0.32[W/(m*K)]' '0' '0' '0' '0.32[W/(m*K)]' '0' '0' '0' '0.32[W/(m*K)]'});
model.component('comp1').material('mat1').selection.geom(2);
model.component('comp1').material('mat1').selection.set([]);
model.component('comp1').material('mat1').set('family', 'plastic');
model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material('mat2').label('Skin');
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', '3391[J/(kg*K)]');
model.component('comp1').material('mat2').propertyGroup('def').set('density', '1109[kg/m^3]');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'0.37[W/(m*K)]' '0' '0' '0' '0.37[W/(m*K)]' '0' '0' '0' '0.37[W/(m*K)]'});
model.component('comp1').material('mat2').propertyGroup('def').set('frequencyfactor', '4.575e72');
model.component('comp1').material('mat2').propertyGroup('def').set('activationenergy', '4.71e5');
model.component('comp1').material('mat2').set('family', 'plastic');
model.component('comp1').material.create('mat3', 'Common');
model.component('comp1').material('mat3').label('Fat');
model.component('comp1').material('mat3').propertyGroup('def').set('heatcapacity', '2348[J/(kg*K)]');
model.component('comp1').material('mat3').propertyGroup('def').set('density', '911[kg/m^3]');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalconductivity', {'0.21[W/(m*K)]' '0' '0' '0' '0.21[W/(m*K)]' '0' '0' '0' '0.21[W/(m*K)]'});
model.component('comp1').material('mat3').propertyGroup('def').set('frequencyfactor', '4.43e16');
model.component('comp1').material('mat3').propertyGroup('def').set('activationenergy', '1.3e5');
model.component('comp1').material('mat3').set('family', 'plastic');

model.label('close_colinear.mph');

model.component('comp1').material.create('mat4', 'Common');
model.component('comp1').material('mat4').label('Nerve');
model.component('comp1').material('mat4').propertyGroup('def').set('electricconductivity', {'3.46E-2' '0' '0' '0' '3.46E-2' '0' '0' '0' '3.46E-2'});
model.component('comp1').material('mat4').propertyGroup('def').set('relpermittivity', {'4.96E+4' '0' '0' '0' '4.96E+4' '0' '0' '0' '4.96E+4'});
model.component('comp1').material('mat4').set('family', 'plastic');
model.component('comp1').material.create('mat5', 'Common');
model.component('comp1').material('mat5').label('Electrode');
model.component('comp1').material('mat5').propertyGroup('def').set('electricconductivity', {'8e6' '0' '0' '0' '8e6' '0' '0' '0' '8e6'});
model.component('comp1').material('mat5').propertyGroup('def').set('relpermittivity', {'7' '0' '0' '0' '7' '0' '0' '0' '7'});
model.component('comp1').material('mat5').set('family', 'plastic');
model.component('comp1').material.create('mat6', 'Common');
model.component('comp1').material('mat6').label('Hidrogel');
model.component('comp1').material('mat6').propertyGroup('def').set('electricconductivity', {'0.0038' '0' '0' '0' '0.0038' '0' '0' '0' '0.0038'});
model.component('comp1').material('mat6').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat6').set('family', 'plastic');
model.component('comp1').material.create('mat7', 'Common');
model.component('comp1').material('mat7').label('Muscle');
model.component('comp1').material('mat7').propertyGroup('def').set('heatcapacity', '3421[J/(kg*K)]');
model.component('comp1').material('mat7').propertyGroup('def').set('density', '1090[kg/m^3]');
model.component('comp1').material('mat7').propertyGroup('def').set('thermalconductivity', {'0.49[W/(m*K)]' '0' '0' '0' '0.49[W/(m*K)]' '0' '0' '0' '0.49[W/(m*K)]'});
model.component('comp1').material('mat7').set('family', 'plastic');
model.component('comp1').material('mat1').selection.set([38]);
model.component('comp1').material('mat2').selection.set([1]);
model.component('comp1').material('mat3').selection.set([2]);
model.component('comp1').material('mat4').selection.set([9]);
model.component('comp1').material('mat5').selection.set([4 5 12 13]);
model.component('comp1').material('mat6').selection.set([6 7 10 11]);
model.component('comp1').material('mat7').selection.set([3]);
model.component('comp1').material.move('mat2', 0);
model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'2.01E-4'});
model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'1.13E+3'});
model.component('comp1').material.remove('mat1');
model.component('comp1').material('mat3').propertyGroup('def').set('electricconductivity', {'4.28E-2'});
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity', {'2.38E+3'});
model.component('comp1').material('mat7').propertyGroup('def').set('electricconductivity', {'3.37E-1'});
model.component('comp1').material('mat7').propertyGroup('def').set('relpermittivity', {'5.23E+4'});

model.label('close_colinear.mph');

model.component('comp1').material.create('mat8', 'Common');
model.component('comp1').material('mat8').label('Bone');
model.component('comp1').material('mat8').propertyGroup('def').set('heatcapacity', '1313[J/(kg*K)]');
model.component('comp1').material('mat8').propertyGroup('def').set('density', '1908[kg/m^3]');
model.component('comp1').material('mat8').propertyGroup('def').set('thermalconductivity', {'0.32[W/(m*K)]' '0' '0' '0' '0.32[W/(m*K)]' '0' '0' '0' '0.32[W/(m*K)]'});
model.component('comp1').material('mat8').propertyGroup('def').set('electricconductivity', {'1.02E-1' '0' '0' '0' '1.02E-1' '0' '0' '0' '1.02E-1'});
model.component('comp1').material('mat8').propertyGroup('def').set('relpermittivity', {'1.34E+3' '0' '0' '0' '1.34E+3' '0' '0' '0' '1.34E+3'});
model.component('comp1').material('mat8').set('family', 'plastic');
model.component('comp1').material('mat8').selection.set([8]);

model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.01*cos(2*pi*5000[Hz]*t)[A]/(4[cm^2])');
model.component('comp1').physics('ec').feature('ncd1').selection.set([18]);
model.component('comp1').physics('ec').create('gnd1', 'Ground', 2);
model.component('comp1').physics('ec').feature('gnd1').selection.set([14]);
model.component('comp1').physics.create('ec2', 'ConductiveMedia', 'geom1');

model.study('std1').feature('time').activate('ec2', true);

model.component('comp1').physics('ec2').create('ncd1', 'NormalCurrentDensity', 2);
model.component('comp1').physics('ec2').feature('ncd1').selection.set([70]);
model.component('comp1').physics('ec2').create('gnd1', 'Ground', 2);
model.component('comp1').physics('ec2').feature('gnd1').selection.set([69]);
model.component('comp1').physics('ec2').feature('ncd1').set('nJ', '0.01*cos(2*pi*5050[Hz]*t)[A]/(4[cm^2])');

model.component('comp1').mesh('mesh1').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh1').feature('size').set('custom', false);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').create('ftet2', 'FreeTet');
model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').autoMeshSize(4);
model.component('comp1').mesh('mesh1').run;

model.study('std1').feature('time').set('tlist', 'range(0,4.0e-5,0.02)');

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('time').set('notlistsolnum', 1);
model.study('std1').feature('time').set('notsolnum', '1');
model.study('std1').feature('time').set('listsolnum', 1);
model.study('std1').feature('time').set('solnum', '1');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,4.0e-5,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_V'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_V2'});
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').feature('i2').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').feature('t1').feature('dDef').active(true);
model.sol('sol1').feature('t1').feature('dDef').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').feature('fc1').set('ntermconst', 'iter');
model.sol('sol1').feature('t1').feature('fc1').set('niter', 2);
model.sol('sol1').feature('t1').feature('fc1').set('plot', false);
model.sol('sol1').feature('t1').feature.move('fc1', 2);

model.result.dataset.create('cln1', 'CutLine3D');
model.result.dataset('cln1').setIndex('genpoints', 7.6, 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 7.6, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 3, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 7, 1, 2);

model.component('comp1').view('view1').set('hidestatus', 'ignore');
model.component('comp1').view('view1').set('scenelight', true);
model.component('comp1').view('view1').set('transparency', true);
model.component('comp1').view('view1').set('renderwireframe', true);
model.component('comp1').view('view1').set('transparency', true);
model.component('comp1').view('view1').set('renderwireframe', false);

model.result.dataset('cln1').set('data', 'dset1');
model.result.create('pg1', 'PlotGroup1D');
model.result('pg1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').run;
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('iso1', 'Isosurface');
model.result('pg2').feature('iso1').set('data', 'dset1');
model.result('pg2').feature('iso1').setIndex('looplevel', 'interp', 0);
model.result('pg2').feature('iso1').setIndex('looplevel', 501, 0);
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').create('lngr1', 'LineGraph');
model.result('pg1').feature('lngr1').set('data', 'cln1');
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('unit', '');
model.result('pg1').feature('lngr1').set('expr', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').feature('str1').set('expr', {'ec.Jx+ec2.Jx' 'ec.Jy' 'ec.Jz'});
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jy+ec2.Jx', 1);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jz+ec2.Jx', 2);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jy+ec2.Jy', 1);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jz+ec2.Jz', 2);
model.result('pg2').run;
model.result('pg2').feature('str1').set('selnumber', 100);
model.result('pg2').run;
model.result('pg2').feature('str1').selection.all;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.remove('str1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature.remove('iso1');
model.result('pg2').run;
model.result('pg2').create('con1', 'Contour');
model.result('pg2').feature('con1').set('unit', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg2').run;
model.result('pg2').feature('con1').set('number', 500);
model.result('pg2').run;
model.result('pg2').feature.remove('con1');
model.result('pg2').run;
model.result('pg2').create('vol1', 'Volume');
model.result('pg2').feature('vol1').set('unit', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('expr', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg2').run;
model.result('pg2').feature('vol1').set('data', 'dset1');
model.result('pg2').run;
model.result('pg2').feature('vol1').setIndex('looplevel', 438, 0);
model.result('pg2').run;
model.result('pg2').feature('vol1').setIndex('looplevel', 26, 0);
model.result('pg2').run;
model.result('pg2').feature('vol1').set('expr', 'Vxx+Vzz+Vyy+V2xx+V2zz+V2yy');
model.result('pg2').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg2');
model.result.export('anim1').run;
model.result.export('anim1').set('maxframes', 100);
model.result.export('anim1').showFrame;
model.result.export('anim1').set('showframe', 1);
model.result.export('anim1').set('repeat', true);
model.result.export('anim1').set('stopped', true);
model.result.export('anim1').run;
model.result.export('anim1').set('repeat', false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('arwv1', 'ArrowVolume');
model.result('pg2').run;
model.result('pg2').feature('arwv1').set('expr', {'ec.Jx+ec2.Jx' 'ec.Jy' 'ec.Jz'});
model.result('pg2').run;
model.result('pg2').feature('arwv1').setIndex('expr', 'ec.Jy+ec2.Jx', 1);
model.result('pg2').feature('arwv1').setIndex('expr', 'ec.Jz+ec2.Jz', 2);
model.result('pg2').feature('arwv1').setIndex('expr', 'ec.Jy+ec2.Jy', 1);
model.result('pg2').feature('arwv1').set('xnumber', 20);
model.result('pg2').feature('arwv1').set('ynumber', 20);
model.result('pg2').feature('arwv1').set('znumber', 20);
model.result('pg2').run;
model.result('pg2').feature('arwv1').set('arrowlength', 'proportional');
model.result('pg2').run;
model.result('pg2').feature('vol1').active(false);
model.result('pg2').run;
model.result('pg2').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').set('showframe', 1);
model.result.export('anim1').run;
model.result('pg2').run;
model.result('pg2').feature('arwv1').set('xnumber', 40);
model.result('pg2').feature('arwv1').set('ynumber', 40);
model.result('pg2').feature('arwv1').set('znumber', 40);
model.result('pg2').run;
model.result('pg2').feature('arwv1').set('xnumber', 10);
model.result('pg2').feature('arwv1').set('ynumber', 10);
model.result('pg2').feature('arwv1').set('znumber', 10);
model.result('pg2').run;
model.result('pg2').feature('arwv1').set('arrowlength', 'logarithmic');
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim1').set('maxframes', 1000);
model.result.export('anim1').set('showframe', 1000);
model.result.export('anim1').set('stopped', true);
model.result.export('anim1').run;
model.result.export('anim1').set('maxframes', 100);
model.result('pg2').run;
model.result('pg2').feature('arwv1').active(false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('unit', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg2').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'Vxx+Vzz+V2xx+V2zz');
model.result('pg2').run;
model.result('pg2').feature('surf1').set('data', 'dset1');
model.result('pg2').feature('surf1').setIndex('looplevel', 1, 0);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').create('str1', 'Streamline');
model.result('pg2').feature('str1').set('expr', {'ec.Jx+ec2.Jx' 'ec.Jy' 'ec.Jz'});
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jy+ec2.J', 1);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jz+ec2.J', 2);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jy+ec2.Jy', 1);
model.result('pg2').feature('str1').setIndex('expr', 'ec.Jz+ec2.Jz', 2);
model.result('pg2').run;
model.result('pg2').feature('str1').set('data', 'dset1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').active(false);
model.result('pg2').run;
model.result('pg2').feature('surf1').active(true);
model.result('pg2').run;
model.result('pg2').feature('surf1').active(false);
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').feature('str1').set('selnumber', 200);
model.result('pg2').run;
model.result('pg2').feature('str1').setIndex('looplevel', 487, 0);
model.result('pg2').run;
model.result('pg2').feature('str1').set('posmethod', 'uniform');
model.result('pg2').run;
model.result('pg2').feature('str1').set('posmethod', 'magnitude');
model.result('pg2').run;
model.result('pg2').feature('str1').set('posmethod', 'start');
model.result('pg2').feature('str1').set('number', 40);
model.result('pg2').run;
model.result('pg2').feature('str1').set('number', 60);
model.result('pg2').run;
model.result('pg2').feature('str1').set('number', 40);
model.result('pg2').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.dataset.create('mesh1', 'Mesh');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('data', 'mesh1');
model.result('pg2').run;
model.result('pg2').set('data', 'dset1');
model.result('pg2').run;
model.result('pg2').set('data', 'cln1');
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').set('data', 'dset1');
model.result('pg2').run;
model.result.dataset.create('dset2', 'Solution');
model.result.dataset.remove('dset2');
model.result('pg2').run;
model.result('pg2').create('mesh1', 'Mesh');
model.result('pg2').feature('mesh1').set('data', 'dset1');
model.result('pg2').run;
model.result('pg2').feature.remove('mesh1');
model.result('pg2').run;
model.result('pg2').create('arws1', 'ArrowSurface');
model.result('pg2').run;
model.result('pg2').feature('arws1').set('data', 'dset1');
model.result('pg2').run;
model.result('pg2').feature('arws1').set('expr', {'ec.Jx+ec2.Jx' 'ec.Jy' 'ec.Jz'});
model.result('pg2').feature('arws1').setIndex('expr', 'ec.Jy+ec2.J', 1);
model.result('pg2').feature('arws1').setIndex('expr', 'ec.Jz+ec2.J', 2);
model.result('pg2').feature('arws1').setIndex('expr', 'ec.Jy+ec2.Jy', 1);
model.result('pg2').feature('arws1').setIndex('expr', 'ec.Jz+ec2.Jz', 2);
model.result('pg2').run;
model.result('pg2').feature('arws1').set('arrowlength', 'logarithmic');
model.result('pg2').run;

model.label('close_colinear.mph');

model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('expr', 'Vzz+V2zz');
model.result('pg1').run;

model.component('comp1').geom('geom1').feature('ext4').setIndex('distance', 'sqrt(2)', 0);
model.component('comp1').geom('geom1').run('ext4');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('size', 'sqrt(2)');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('size', 'sqrt(2)');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('pos', [6 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('pos', [5 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9 1]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9 -1]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9 -0.8]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9 -0.5]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').run('wp5');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('size', 'sqrt(2)');
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('pos', [5 0]);
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq2').set('size', 'sqrt(2)');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq2').set('pos', [9 -0.5]);
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq2').set('rot', 15);
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq2').set('rot', 20);
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy4');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('ext5').setIndex('distance', 'sqrt(2)', 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 4.5);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 5);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 3);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 4);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 2);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 2.5);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.component('comp1').physics('ec2').feature('ncd1').set('nJ', '0.01*cos(2*pi*5050[Hz]*t)[A]/(2[cm^2])');
model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.01*cos(2*pi*5000[Hz]*t)[A]/(2[cm^2])');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg2').run;
model.result('pg1').run;

model.label('close_colinear.mph');

model.result('pg1').run;

model.component('comp1').geom('geom1').feature('cyl2').set('pos', [8 3 0]);
model.component('comp1').geom('geom1').run('cyl2');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [10 -0.5]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq2').set('pos', [9.5 -0.5]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('int2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy4');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq2').set('pos', [9.5 -0.5]);
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy4');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 2);
model.component('comp1').geom('geom1').run('wp4');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 4);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 5);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 4);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('expr', 'Vzz+V2zz+Vxx+V2xx');
model.result('pg1').run;

model.label('close_colinear.mph');

model.result('pg1').run;
model.result('pg2').run;
model.result.remove('pg2');
model.result('pg1').run;
model.result('pg1').run;
model.result.dataset.remove('mesh1');
model.result.dataset('cln1').setIndex('genpoints', 8, 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 8, 1, 0);
model.result('pg1').run;
model.result.export.create('plot1', 'Plot');
model.result.export('plot1').set('filename', 'nerve.txt');
model.result.export('plot1').run;
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').setIndex('genpoints', 2, 0, 1);
model.result.dataset('cln2').setIndex('genpoints', 2, 1, 1);
model.result.create('pg2', 'PlotGroup1D');
model.result('pg2').run;
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('data', 'cln2');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').feature('lngr1').set('expr', 'Vzz+V2zz+Vxx+V2xx');
model.result.export.create('plot2', 'Plot');
model.result.export('plot2').set('plotgroup', 'pg2');
model.result.export('plot2').set('filename', 'skin2nerve.txt');
model.result.export('plot2').run;
model.result.dataset.duplicate('cln3', 'cln2');
model.result.dataset('cln3').setIndex('genpoints', 4.5, 0, 1);
model.result.dataset('cln3').setIndex('genpoints', 4.5, 1, 1);
model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('data', 'cln3');
model.result('pg3').feature('lngr1').set('expr', 'Vzz+V2zz+Vxx+V2xx');
model.result.export.create('plot3', 'Plot');
model.result.export('plot3').set('plotgroup', 'pg3');
model.result.export('plot3').set('filename', 'nerve2bone.txt');
model.result.export('plot3').set('header', false);
model.result.export('plot3').run;
model.result.export('plot1').set('header', false);
model.result.export('plot2').set('header', false);
model.result.dataset.duplicate('cln4', 'cln3');
model.result.dataset('cln4').setIndex('genpoints', 7.5, 0, 1);
model.result.dataset('cln4').setIndex('genpoints', 7.5, 1, 1);
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('data', 'cln4');
model.result('pg4').feature('lngr1').set('expr', 'Vzz+V2zz+Vxx+V2xx');
model.result.export.create('plot4', 'Plot');
model.result.export('plot4').set('plotgroup', 'pg4');
model.result.export('plot4').set('header', false);
model.result.export('plot4').set('filename', 'bone.txt');
model.result.export('plot4').run;
model.result.dataset.duplicate('cln5', 'cln4');
model.result.dataset('cln5').setIndex('genpoints', 12, 0, 1);
model.result.dataset('cln5').setIndex('genpoints', 12, 1, 1);
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('data', 'cln5');
model.result('pg5').feature('lngr1').set('expr', 'Vzz+V2zz+Vxx+V2xx');
model.result.export.create('plot5', 'Plot');
model.result.export('plot5').set('filename', 'back.txt');
model.result.export('plot5').set('header', false);
model.result.export('plot5').run;

model.label('close_colinear.mph');

model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('sq2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('c2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('int2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('copy3');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('dif2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature.remove('copy4');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('base', 'center');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('pos', [8 0]);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('rot', 0);
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy1').set('displx', 0);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp4').geom.feature('copy2').set('displx', 0);
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('sq2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('int2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('copy3');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('dif2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('copy4');
model.component('comp1').geom('geom1').feature('wp5').geom.feature.remove('c2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('rot', 0);
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('pos', [8 0]);
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('base', 'center');
model.component('comp1').geom('geom1').feature('wp5').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp5').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp5').geom.run('int1');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('copy1').set('displx', 0);
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy1');
model.component('comp1').geom('geom1').feature('wp5').geom.run('dif1');
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy2');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('copy2').set('displx', 0);
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy2');
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').physics('ec').feature('ncd1').selection.set([22 40]);
model.component('comp1').physics('ec').feature('gnd1').selection.set([18 39]);
model.component('comp1').physics('ec2').active(false);
model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.01*cos(2*pi*50[Hz]*t)[A]/(2[cm^2])');

model.component('comp1').mesh('mesh1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('expr', 'Vzz+Vxx');
model.result('pg2').feature('lngr1').set('expr', 'Vzz+Vxx');
model.result('pg3').feature('lngr1').set('expr', 'Vzz+Vxx');
model.result('pg4').feature('lngr1').set('expr', 'Vzz+Vxx');
model.result('pg5').feature('lngr1').set('expr', 'Vzz+Vxx');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg4').run;
model.result('pg5').run;
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;
model.result.export('plot4').run;
model.result('pg5').run;
model.result.export('plot5').run;

model.label('standard50Hz.mph');

model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'1.14E+3'});
model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'2.0E-4'});
model.component('comp1').material('mat3').propertyGroup('def').set('electricconductivity', {'4.04E-2'});
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity', {'2.58E+5'});
model.component('comp1').material('mat4').propertyGroup('def').set('electricconductivity', {'2.74E-2'});
model.component('comp1').material('mat4').propertyGroup('def').set('relpermittivity', {'1.61E+6'});
model.component('comp1').material('mat8').propertyGroup('def').set('electricconductivity', {'2.01E-2'});
model.component('comp1').material('mat8').propertyGroup('def').set('relpermittivity', {'8.87E+3'});

model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').material('mat7').propertyGroup('def').set('relpermittivity', {'2.33E-1'});
model.component('comp1').material('mat7').propertyGroup('def').set('electricconductivity', {'2.33E-1'});
model.component('comp1').material('mat7').propertyGroup('def').set('relpermittivity', {'1.77E+7'});

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('cutline', 'cln1');
model.result('pg1').feature('lngr1').set('linefirst', [8 7.909999847412109 0]);
model.result('pg1').feature('lngr1').set('linesecond', [8 7.909999847412109 7]);
model.result('pg1').feature('lngr1').set('lineisinit', true);
model.result.dataset('cln1').set('method', 'twopoint');
model.result.dataset('cln1').set('genpoints', [8 7.91002 0; 8 7.91002 6.99999]);
model.result('pg1').feature('lngr1').set('cutmode', 'off');
model.result('pg1').run;
model.result('pg2').run;
model.result('pg1').run;
model.result.dataset('cln1').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 3, 1, 1);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg5').run;
model.result('pg4').run;
model.result('pg3').run;
model.result('pg5').run;
model.result('pg1').run;
model.result.export('plot5').set('plotgroup', 'pg5');
model.result.export('plot5').run;

model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'2.00E-4'});
model.component('comp1').material('mat3').propertyGroup('def').set('relpermittivity', {'4.58E+5'});

model.sol('sol1').runAll;

model.result('pg1').run;

model.label('standard50Hz.mph');

model.result('pg1').run;

model.label('standard50Hz.mph');

model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').run;
model.result('pg6').create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('expr', 'abs(log(abs(Vxx+Vzz+Vyy)))');
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedataactive', true);
model.result('pg6').feature('vol1').set('rangedatamin', 5);
model.result('pg6').feature('vol1').set('rangedataactive', true);
model.result('pg6').feature('vol1').set('rangedatamin', 5);
model.result('pg6').feature('vol1').set('colortable', 'RainbowLight');
model.result('pg6').feature('vol1').set('colortablerev', false);

model.label('standard50Hz.mph');

model.setGroupByType(false);
model.component('comp1').setGroupByType(false);

model.component('comp1').physics('ec').setGroupBySpaceDimension(false);
model.component('comp1').physics('ec2').setGroupBySpaceDimension(false);

model.result('pg6').run;
model.result.dataset.create('cln6', 'CutLine3D');
model.result.dataset('cln6').setIndex('genpoints', 8, 0, 1);
model.result.dataset('cln6').setIndex('genpoints', 8, 1, 1);
model.result.dataset('cln6').setIndex('genpoints', 3, 0, 0);
model.result.dataset('cln6').setIndex('genpoints', 3, 1, 0);
model.result.dataset('cln6').setIndex('genpoints', 1, 0, 2);
model.result.dataset('cln6').setIndex('genpoints', 13, 1, 2);
model.result.dataset('cln6').setIndex('genpoints', 8, 0, 0);
model.result.dataset('cln6').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln6').setIndex('genpoints', 8, 1, 0);
model.result.dataset('cln6').setIndex('genpoints', 3, 1, 1);
model.result.dataset('cln6').setIndex('genpoints', 11, 1, 2);
model.result.dataset('cln6').setIndex('genpoints', 8, 1, 2);
model.result.dataset('cln6').setIndex('genpoints', 3, 0, 2);
model.result.dataset('cln6').setIndex('genpoints', 1, 0, 2);
model.result.dataset('cln6').setIndex('genpoints', 0, 0, 2);
model.result.dataset('cln6').setIndex('genpoints', 6, 1, 2);
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').run;
model.result('pg7').set('data', 'cln6');
model.result('pg7').create('line1', 'Line');
model.result('pg7').run;
model.result('pg7').feature('line1').set('expr', 'Vx');
model.result('pg7').run;
model.result.export.create('plot6', 'Plot');
model.result.export('plot6').set('plotgroup', 'pg7');
model.result.export('plot6').set('filename', 'sidetoside_50Hz');
model.result.export('plot6').set('header', false);
model.result.export('plot6').set('sort', true);
model.result.export('plot6').set('separator', [native2unicode(hex2dec({'00' '09'}), 'unicode') ]);
model.result.export('plot6').run;
model.result.export('plot6').set('filename', 'sidetoside_50Hz.txt');
model.result.export('plot6').run;
model.result.export('plot6').run;
model.result('pg7').run;
model.result('pg7').feature('line1').set('expr', 'V');
model.result('pg7').run;
model.result.export('plot6').run;
model.result('pg7').run;
model.result('pg7').feature('line1').set('expr', 'Vz');
model.result('pg7').run;

model.label('standard50Hz.mph');

model.result('pg7').run;

model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.02*cos(2*pi*50[Hz]*t)[A]/(2[cm^2])');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 7);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 6);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 5);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 0.0118367948645781);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 5);
model.result('pg6').run;

model.label('standard50Hz.mph');

model.result('pg6').run;
model.result('pg7').run;

model.component('comp1').geom('geom1').feature('wp4').geom.feature('sq1').set('size', 'sqrt(4)');
model.component('comp1').geom('geom1').feature('wp4').geom.run('sq1');
model.component('comp1').geom('geom1').feature('wp4').geom.run('copy2');
model.component('comp1').geom('geom1').feature('ext4').setIndex('distance', 'sqrt(4)', 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 1);
model.component('comp1').geom('geom1').run('wp4');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').geom.feature('sq1').set('size', 'sqrt(4)');
model.component('comp1').geom('geom1').feature('wp5').geom.run('copy2');
model.component('comp1').geom('geom1').feature('ext5').setIndex('distance', 'sqrt(4)', 0);
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').selection.set([5 6 9]);
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg6').run;

model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.08*cos(2*pi*50[Hz]*t)[A]/(4[cm^2])');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 0.0115503094223759);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').setIndex('looplevel', 501, 0);
model.result('pg6').run;
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 5.81000702947246E-4);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 5);
model.result('pg6').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg4').run;
model.result('pg5').run;
model.result('pg1').run;
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 7);
model.result('pg6').run;
model.result('pg6').feature('vol1').set('rangedatamin', 6);
model.result('pg6').run;
model.result('pg7').run;
model.result('pg7').setIndex('looplevel', 251, 0);
model.result('pg7').run;
model.result.export('plot6').run;

model.component('comp1').physics('ec').feature('ncd1').set('nJ', '0.05*cos(2*pi*50[Hz]*t)[A]/(4[cm^2])');

model.sol('sol1').runAll;

model.result('pg1').run;

model.label('standard50Hz.mph');

model.result('pg1').run;

model.component('comp1').geom('geom1').feature('cyl1').set('h', 10);
model.component('comp1').geom('geom1').feature('cyl2').set('h', 10);
model.component('comp1').geom('geom1').feature('ext1').setIndex('distance', 10, 0);
model.component('comp1').geom('geom1').feature('ext2').setIndex('distance', 10, 0);
model.component('comp1').geom('geom1').feature('ext3').setIndex('distance', 10, 0);
model.component('comp1').geom('geom1').run('ext3');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp5').set('quickz', 6);
model.component('comp1').geom('geom1').run('wp5');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('wp4').set('quickz', 2);
model.component('comp1').geom('geom1').run('wp4');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.sol('sol1').runAll;

model.result('pg1').run;

model.label('standard50Hz.mph');

model.result('pg1').run;

model.component('comp1').view('view1').set('showgrid', false);

model.label('standard50Hz.mph');

model.result.dataset.remove('cln2');
model.result.dataset.remove('cln3');
model.result.dataset.remove('cln4');
model.result.dataset.remove('cln5');
model.result.dataset.remove('cln6');
model.result('pg1').run;
model.result.dataset('cln1').setIndex('genpoints', 10, 1, 2);
model.result('pg1').run;
model.result.dataset('cln1').label('nerve');
model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').setIndex('genpoints', 0.3, 0, 1);
model.result.dataset('cln2').setIndex('genpoints', 0.3, 1, 1);
model.result.dataset('cln2').label('skin');
model.result('pg4').run;
model.result.remove('pg4');
model.result.remove('pg5');
model.result('pg2').run;
model.result('pg2').create('lngr1', 'LineGraph');
model.result('pg2').feature('lngr1').set('data', 'cln2');
model.result('pg2').feature('lngr1').set('expr', 'Vzz');
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').feature('lngr1').set('expr', 'Vzz');
model.result('pg1').run;
model.result.dataset.duplicate('cln3', 'cln2');
model.result.dataset('cln3').setIndex('genpoints', 1.5, 0, 1);
model.result.dataset('cln3').setIndex('genpoints', 1.5, 1, 1);
model.result.dataset('cln3').label('skin2nerve');
model.result('pg3').run;
model.result.duplicate('pg7', 'pg3');
model.result('pg7').run;
model.result.remove('pg7');
model.result('pg3').run;
model.result('pg3').create('lngr1', 'LineGraph');
model.result('pg3').feature('lngr1').set('data', 'cln3');
model.result('pg3').feature('lngr1').set('expr', 'Vzz');
model.result('pg3').run;
model.result('pg6').run;
model.result.export('plot2').set('filename', 'skin.txt');
model.result.export('plot3').set('filename', 'skin2nerve.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;
model.result('pg6').run;

model.component('comp1').view('view1').set('showaxisorientation', false);

model.label('standard50Hz.mph');

model.result('pg6').run;

model.study.create('std2');
model.study('std2').create('stat', 'Stationary');
model.study('std2').feature('stat').setSolveFor('/physics/ec', true);
model.study('std2').feature('stat').setSolveFor('/physics/ec2', true);

model.component('comp1').physics('ec').feature.duplicate('ncd2', 'ncd1');
model.component('comp1').physics('ec').feature('ncd1').active(false);
model.component('comp1').physics('ec').feature('ncd2').set('nJ', '0.05[A]/(4[cm^2])');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 9);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').feature('size').set('hauto', 7);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.result('pg6').run;
model.result('pg6').run;
model.result('pg3').run;
model.result.create('pg7', 'PlotGroup1D');
model.result('pg7').run;
model.result('pg7').create('lngr1', 'LineGraph');
model.result('pg7').feature('lngr1').set('data', 'cln1');
model.result('pg7').run;

model.sol.create('sol2');
model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');

model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').label('Electric Potential (ec)');
model.result('pg8').set('showlooplevel', {'off' 'off' 'off'});
model.result('pg8').set('frametype', 'spatial');
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').set('data', 'dset2');
model.result('pg8').feature.create('vol1', 'Volume');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('solutionparams', 'parent');
model.result('pg8').feature('vol1').set('colortable', 'Dipole');
model.result('pg8').feature('vol1').set('showsolutionparams', 'on');
model.result('pg8').feature('vol1').set('data', 'parent');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').label('Electric Field Norm (ec)');
model.result('pg9').set('showlooplevel', {'off' 'off' 'off'});
model.result('pg9').set('frametype', 'spatial');
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').set('data', 'dset2');
model.result('pg9').feature.create('mslc1', 'Multislice');
model.result('pg9').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg9').feature('mslc1').set('solutionparams', 'parent');
model.result('pg9').feature('mslc1').set('expr', 'ec.normE');
model.result('pg9').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg9').feature('mslc1').set('xcoord', 'ec.CPx');
model.result('pg9').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg9').feature('mslc1').set('ycoord', 'ec.CPy');
model.result('pg9').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg9').feature('mslc1').set('zcoord', 'ec.CPz');
model.result('pg9').feature('mslc1').set('colortable', 'Prism');
model.result('pg9').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg9').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg9').feature('mslc1').set('data', 'parent');
model.result('pg9').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg9').feature('strmsl1').set('expr', {'ec.Ex' 'ec.Ey' 'ec.Ez'});
model.result('pg9').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg9').feature('strmsl1').set('xcoord', 'ec.CPx');
model.result('pg9').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg9').feature('strmsl1').set('ycoord', 'ec.CPy');
model.result('pg9').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg9').feature('strmsl1').set('zcoord', 'ec.CPz');
model.result('pg9').feature('strmsl1').set('titletype', 'none');
model.result('pg9').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg9').feature('strmsl1').set('udist', 0.02);
model.result('pg9').feature('strmsl1').set('maxlen', 0.4);
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('inheritcolor', false);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg9').feature('strmsl1').set('maxtime', Inf);
model.result('pg9').feature('strmsl1').set('data', 'parent');
model.result('pg9').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg9').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg9').feature('strmsl1').feature('col1').set('expr', 'ec.normE');
model.result('pg9').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg9').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg9').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg9').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg9').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');

model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg8').set('data', 'dset2');
model.result('pg9').set('data', 'dset2');
model.result('pg9').run;
model.result('pg7').run;
model.result.remove('pg7');
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').set('data', 'dset2');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('data', 'none');
model.result('pg10').run;
model.result('pg10').run;

model.study.remove('std1');

model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').run;
model.result.dataset.create('cln1', 'CutLine3D');

model.component('comp1').view('view1').set('showgrid', true);
model.component('comp1').view('view1').set('showaxisorientation', true);

model.result.dataset('cln1').setIndex('genpoints', 8, 0, 0);
model.result.dataset('cln1').setIndex('genpoints', 8, 1, 0);
model.result.dataset('cln1').setIndex('genpoints', 3, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 3, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 10, 1, 2);
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('data', 'cln1');
model.result('pg10').run;
model.result.dataset('cln1').setIndex('genpoints', 2.8, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.8, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.75, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.75, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.7, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.7, 1, 1);
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').run;
model.result.duplicate('pg11', 'pg10');
model.result('pg11').run;
model.result('pg10').run;
model.result('pg10').label('Potential');
model.result('pg11').run;
model.result('pg11').label('Elecrtric Field');
model.result('pg11').create('lngr2', 'LineGraph');
model.result('pg11').feature.remove('lngr2');
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('expr', 'Vz');
model.result('pg11').run;
model.result('pg11').run;
model.result('pg11').run;
model.result.duplicate('pg12', 'pg11');
model.result('pg12').run;
model.result('pg12').label('Activating function');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('expr', 'Vzz');
model.result('pg12').run;
model.result.export.create('plot1', 'Plot');
model.result.export('plot1').label('Potentials');
model.result.export('plot1').set('plotgroup', 'pg10');
model.result.export('plot1').label('Potential');
model.result.export('plot1').set('filename', 'Normal_Potential.txt');
model.result.export('plot1').set('header', false);
model.result.export('plot1').set('sort', true);
model.result.export('plot1').run;
model.result.export.duplicate('plot2', 'plot1');
model.result.export('plot2').label('Electric FIeld');
model.result.export('plot2').set('plotgroup', 'pg11');
model.result.export('plot2').set('filename', 'Normal_ElectricField.txt');
model.result.export('plot2').run;
model.result.export.duplicate('plot3', 'plot2');
model.result.export('plot3').label('Activating Function');
model.result.export('plot3').set('filename', 'Normal_ActFunction.txt');
model.result.export('plot3').set('plotgroup', 'pg12');
model.result.export('plot3').run;

model.component('comp1').mesh('mesh1').feature.remove('ftet1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh.remove('mesh1');
model.component('comp1').mesh.create('mesh1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').autoMeshSize(7);
model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result.export('plot1').set('filename', 'Coarser_Potential.txt');
model.result.export('plot2').set('filename', 'Coarser_ElectricField.txt');
model.result.export('plot3').set('filename', 'Coarser_ActFunction.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;

model.component('comp1').mesh('mesh1').autoMeshSize(3);
model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result.export('plot1').set('filename', 'Finer_Potential.txt');
model.result.export('plot2').set('filename', 'Finer_ElectricField.txt');
model.result.export('plot3').set('filename', 'Finer_ActFunction.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;

model.component('comp1').mesh('mesh1').autoMeshSize(1);
model.component('comp1').mesh('mesh1').run;

model.result('pg10').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;

model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result.export('plot1').set('filename', 'ExtrFiner_Potential.txt');
model.result.export('plot2').set('filename', 'ExtrFiner_ElectricField.txt');
model.result.export('plot3').set('filename', 'ExtrFiner_ActFunction.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('resolution', 'extrafine');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', 'ppr');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', 'pprint');
model.result('pg12').run;

model.label('standardStatic.mph');

model.result('pg12').run;
model.result.create('pg13', 'PlotGroup3D');
model.result('pg13').run;
model.result('pg13').create('line1', 'Line');
model.result('pg13').feature('line1').set('data', 'cln1');
model.result('pg13').run;
model.result.export.create('plot4', 'Plot');
model.result.export('plot4').label('3D Potential');
model.result.export('plot4').set('plotgroup', 'pg13');
model.result.export('plot4').set('filename', 'ExtrFiner_3DPotential.txt');
model.result.export('plot4').set('header', false);
model.result.export('plot4').set('sort', true);
model.result.export('plot4').run;

model.component('comp1').mesh('mesh1').autoMeshSize(7);
model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result.export('plot4').run;
model.result.export('plot4').set('filename', 'Coarser_3DPotential.txt');
model.result.export('plot4').run;
model.result('pg10').run;

model.component('comp1').mesh('mesh1').autoMeshSize(9);
model.component('comp1').mesh('mesh1').current('ftet1');

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').attach('std2');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 8);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;
model.result('pg13').feature('line1').set('expr', 'Vz');
model.result('pg13').run;
model.result.export('plot4').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 1);
model.component('comp1').mesh('mesh1').run;

model.result.export('plot4').set('filename', 'ExtrFiner_3DPotential.txt');
model.result.export('plot4').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg11').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result.export('plot4').run;
model.result('pg12').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg13').run;
model.result('pg13').feature('line1').set('expr', 'V');
model.result('pg13').run;
model.result.export('plot4').run;
model.result('pg10').run;
model.result('pg13').run;
model.result('pg11').run;
model.result('pg10').run;
model.result.dataset('cln1').setIndex('genpoints', 2.6, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.6, 1, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.55, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.55, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;

model.component('comp1').mesh('mesh1').feature.remove('ftet1');
model.component('comp1').mesh('mesh1').feature('size').set('hauto', 7);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh.remove('mesh1');
model.component('comp1').mesh.create('mesh1');
model.component('comp1').mesh('mesh1').autoMeshSize(7);
model.component('comp1').mesh('mesh1').run;

model.result('pg10').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg10').run;
model.result('pg13').run;
model.result('pg10').run;
model.result.dataset('cln1').setIndex('genpoints', 2.4, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.4, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;
model.result.export('plot4').set('filename', 'Coarser_3DPotential.txt');
model.result.dataset('cln1').setIndex('genpoints', 2.41, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.41, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result.dataset('cln1').setIndex('genpoints', 2.413, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.413, 1, 1);
model.result('pg10').run;
model.result.export('plot4').run;

model.label('standardStatic.mph');

model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'del');
model.component('comp1').mesh('mesh1').feature('ftet1').create('cr1', 'CornerRefinement');
model.component('comp1').mesh('mesh1').run('ftet1');
model.component('comp1').mesh('mesh1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature.remove('dis1');
model.component('comp1').mesh('mesh1').create('bl1', 'BndLayer');
model.component('comp1').mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom(3);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([]);
model.component('comp1').mesh('mesh1').feature('bl1').selection.allGeom;
model.component('comp1').mesh('mesh1').feature.remove('bl1');

model.result.dataset.create('mesh1', 'Mesh');
model.result.dataset('mesh1').set('mesh', 'mesh1');
model.result.create('pg14', 'PlotGroup3D');
model.result('pg14').label('Mesh Plot 14');
model.result('pg14').set('data', 'mesh1');
model.result('pg14').set('inherithide', true);
model.result('pg14').set('showlegendsmaxmin', true);
model.result('pg14').create('mesh1', 'Mesh');
model.result('pg14').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg14').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg14').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg14').feature('mesh1').set('meshdomain', 'volume');
model.result('pg14').run;

model.component('comp1').mesh('mesh1').create('fq1', 'FreeQuad');
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').run('ftet1');
model.component('comp1').mesh('mesh1').feature.remove('fq1');

model.label('standardStatic.mph');

model.result.dataset.duplicate('cln2', 'cln1');
model.result.dataset('cln2').setIndex('genpoints', 5, 0, 2);
model.result.dataset('cln2').setIndex('genpoints', 5, 1, 2);
model.result.dataset('cln2').setIndex('genpoints', 0, 0, 1);
model.result.dataset('cln2').setIndex('genpoints', 3, 1, 1);
model.result('pg10').run;
model.result('pg10').set('data', 'cln2');
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('data', 'cln2');
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').set('data', 'dset2');
model.result('pg10').run;
model.result('pg10').set('data', 'dset2');
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('data', 'cln2');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('expr', 'Vy');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('data', 'cln2');
model.result('pg12').feature('lngr1').set('expr', 'Vyy');
model.result('pg12').run;
model.result('pg10').run;
model.result.export('plot1').set('filename', 'Coarser_Potential_Y.txt');
model.result.export('plot2').set('filename', 'Coarser_ElectricField_Y.txt');
model.result.export('plot3').set('filename', 'Coarser_ActFunction_Y.txt');
model.result.export('plot4').set('filename', 'Coarser_3DPotentia_Yl.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;
model.result.export('plot4').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 5);

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result.export('plot1').set('filename', 'Normal_Potential_Y.txt');
model.result.export('plot1').run;
model.result.export('plot2').set('filename', 'Normal_ElectricField_Y.txt');
model.result.export('plot2').run;
model.result.export('plot3').set('filename', 'Normal_ActFunction_Y.txt');
model.result.export('plot3').run;
model.result.export('plot4').set('filename', 'Normal_3DPotentia_Yl.txt');
model.result.export('plot4').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 3);

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result.export('plot1').set('filename', 'Finer_Potential_Y.txt');
model.result.export('plot1').run;
model.result.export('plot2').set('filename', 'Finer_ElectricField_Y.txt');
model.result.export('plot2').run;
model.result.export('plot3').set('filename', 'Finer_ActFunction_Y.txt');
model.result.export('plot3').run;
model.result.export('plot4').set('filename', 'Finer_3DPotentia_Yl.txt');
model.result.export('plot4').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 1);

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result.export('plot1').set('filename', 'Extrfiner_Potential_Y.txt');
model.result.export('plot2').set('filename', 'Extrfiner_ElectricField_Y.txt');
model.result.export('plot3').set('filename', 'Extrfiner_ActFunction_Y.txt');
model.result.export('plot4').set('filename', 'Extrfiner_3DPotentia_Yl.txt');
model.result.export('plot1').run;
model.result.export('plot2').run;
model.result.export('plot3').run;
model.result.export('plot4').run;
model.result.dataset('cln2').setIndex('genpoints', 16, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;
model.result('pg14').run;
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').run;
model.result('pg12').run;
model.result('pg13').run;
model.result('pg13').run;
model.result('pg13').feature('line1').set('data', 'cln2');
model.result('pg13').run;
model.result.dataset('cln2').setIndex('genpoints', 3, 0, 2);
model.result.dataset('cln2').setIndex('genpoints', 3, 1, 2);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;
model.result('pg8').run;
model.result.dataset('cln2').setIndex('genpoints', 1, 0, 1);
model.result.dataset('cln2').setIndex('genpoints', 15, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg13').run;

model.label('standardStatic.mph');

model.result('pg13').run;
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').feature('mesh1').set('meshdomain', 'surface');
model.result('pg14').run;
model.result('pg14').feature('mesh1').set('meshdomain', 'line');
model.result('pg14').run;
model.result('pg14').feature('mesh1').set('elemcolor', 'size');
model.result('pg14').feature('mesh1').set('meshdomain', 'all');
model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').selection.geom('geom1', 3);
model.result('pg14').selection.geom('geom1', 3);
model.result('pg14').selection.set([9]);
model.result('pg14').run;
model.result('pg14').run;

model.component('comp1').mesh('mesh1').create('fq1', 'FreeQuad');
model.component('comp1').mesh('mesh1').feature.remove('fq1');

model.result('pg14').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 7);
model.component('comp1').mesh('mesh1').run;

model.result('pg14').run;
model.result('pg14').run;
model.result('pg14').run;

model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'auto');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'dellegacy52');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftet1').set('optlevel', 'high');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'auto');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').create('sca1', 'Scale');
model.component('comp1').mesh('mesh1').feature.remove('sca1');

model.result('pg14').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg10').set('data', 'cln1');
model.result('pg10').run;
model.result('pg8').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg13').run;
model.result('pg9').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('data', 'cln1');
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('data', 'cln1');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('data', 'cln1');
model.result('pg12').run;

model.component('comp1').view('view1').set('rendermesh', true);

model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'del');

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg9').run;

model.component('comp1').mesh('mesh1').feature('ftet1').set('method', 'auto');
model.component('comp1').mesh('mesh1').feature('ftet1').set('optlevel', 'basic');
model.component('comp1').mesh('mesh1').run;

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg12').run;
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('expr', 'Vz');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('expr', 'Vzz');
model.result('pg12').run;
model.result('pg11').run;

model.component('comp1').mesh('mesh1').feature('ftet1').set('optlevel', 'high');

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg12').run;
model.result('pg13').run;
model.result('pg10').run;
model.result('pg14').run;
model.result('pg14').run;
model.result('pg12').run;
model.result('pg11').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 9);

model.sol('sol2').study('std2');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('s1');
model.sol('sol2').attach('std2');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 7);

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg14').run;
model.result.dataset('cln1').setIndex('genpoints', 2.5, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.5, 1, 1);

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg10').run;
model.result('pg13').run;
model.result('pg14').run;

model.component('comp1').mesh('mesh1').feature('ftet1').feature.remove('cr1');
model.component('comp1').mesh('mesh1').feature.remove('ftet1');

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;

model.component('comp1').mesh('mesh1').feature('auto_f1').set('method', 'del');

model.sol('sol2').study('std2');

model.study('std2').feature('stat').set('notlistsolnum', 1);
model.study('std2').feature('stat').set('notsolnum', 'auto');
model.study('std2').feature('stat').set('listsolnum', 1);
model.study('std2').feature('stat').set('solnum', 'auto');

model.sol('sol2').feature.remove('s1');
model.sol('sol2').feature.remove('v1');
model.sol('sol2').feature.remove('st1');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').feature('st1').set('study', 'std2');
model.sol('sol2').feature('st1').set('studystep', 'stat');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').feature('v1').set('control', 'stat');
model.sol('sol2').create('s1', 'Stationary');
model.sol('sol2').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('s1').create('i1', 'Iterative');
model.sol('sol2').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol2').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol2').feature('s1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol2').feature('s1').feature('fc1').set('linsolver', 'i1');
model.sol('sol2').feature('s1').feature.remove('fcDef');
model.sol('sol2').attach('std2');
model.sol('sol2').runAll;

model.result('pg8').run;
model.result('pg14').run;
model.result('pg13').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg9').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('resolution', 'norefine');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', false);
model.result('pg12').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('resolution', 'norefine');
model.result('pg11').run;
model.result('pg10').run;
model.result('pg10').feature('lngr1').set('resolution', 'extrafine');
model.result('pg10').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('resolution', 'extrafine');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('resolution', 'extrafine');
model.result('pg12').run;
model.result('pg11').run;
model.result('pg10').run;
model.result('pg11').run;
model.result.dataset('cln1').setIndex('genpoints', 2.7, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.7, 1, 1);
model.result('pg10').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg11').run;
model.result.dataset('cln1').setIndex('genpoints', 2.65, 0, 1);
model.result.dataset('cln1').setIndex('genpoints', 2.65, 1, 1);
model.result('pg11').run;
model.result('pg10').run;
model.result('pg12').run;
model.result('pg11').run;
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('resolution', 'norefine');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('resolution', 'extrafine');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', 'ppr');
model.result('pg12').run;
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('recover', 'ppr');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('recover', 'pprint');
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('recover', false);
model.result('pg11').run;
model.result('pg11').feature('lngr1').set('recover', 'pprint');
model.result('pg11').run;
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', false);
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', 'pprint');
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', false);
model.result('pg12').run;
model.result('pg12').feature('lngr1').set('recover', 'pprint');
model.result('pg12').run;
model.result.export('plot3').set('filename', 'Coarser_filteredAF.txt');
model.result.export('plot3').run;
model.result('pg12').run;

model.label('standardStatic.mph');

model.result('pg12').run;

model.component('comp1').geom('geom1').run('cyl1');
model.component('comp1').geom('geom1').run('cyl2');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('wp2');
model.component('comp1').geom('geom1').run('wp1');
model.component('comp1').geom('geom1').feature('wp1').geom.run('c1');
model.component('comp1').geom('geom1').feature('wp1').geom.create('pt1', 'Point');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 8, 0);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 2.7, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 2.65, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').physics.create('ge', 'GeneralFormEdgePDE', {'u'});

model.study('std2').feature('stat').setSolveFor('/physics/ge', true);

model.component('comp1').physics('ge').selection.set([]);
model.component('comp1').physics('ge').prop('Units').set('CustomDependentVariableUnit', '1');
model.component('comp1').physics('ge').prop('Units').set('DependentVariableQuantity', 'electricpotential');
model.component('comp1').physics('ge').prop('Units').set('SourceTermQuantity', 'currentsource');
model.component('comp1').physics('ge').field('dimensionless').component(1, 'Vm');
model.component('comp1').physics('ge').feature('gfeq1').setIndex('Ga', {'-VmTx/rho_i-VeTx/rho_i' '-uTy' '-uTz'}, 0);
model.component('comp1').physics('ge').feature('gfeq1').setIndex('Ga', {'-VmTx/rho_i-VeTx/rho_i' '-VmTy/rho_i-VeTy/rho_i' '-uTz'}, 0);
model.component('comp1').physics('ge').feature('gfeq1').setIndex('Ga', {'-VmTx/rho_i-VeTx/rho_i' '-VmTy/rho_i-VeTy/rho_i' '-VmTz/rho_i-VeTz/rho_i'}, 0);
model.component('comp1').physics('ge').feature('gfeq1').setIndex('f', '-(2/r)*i_ion', 0);
model.component('comp1').physics('ge').feature('gfeq1').setIndex('da', '2*Cm/r', 0);
model.component('comp1').physics('ge').feature('init1').set('Vm', '-60[mV]');
model.component('comp1').physics('ge').create('dir1', 'DirichletBoundary', 0);
model.component('comp1').physics('ge').feature('dir1').setIndex('r', '-60[mV]', 0);
model.component('comp1').physics.create('ge2', 'GeneralFormEdgePDE', {'u2'});

model.study('std2').feature('stat').setSolveFor('/physics/ge2', true);

model.component('comp1').physics('ge2').prop('Units').setIndex('CustomSourceTermUnit', '1/s', 0, 0);
model.component('comp1').physics('ge2').field('dimensionless').component({'u2' 'u3' 'u4'});
model.component('comp1').physics('ge2').field('dimensionless').component(1, 'N');
model.component('comp1').physics('ge2').field('dimensionless').component(2, 'M');
model.component('comp1').physics('ge2').field('dimensionless').component(3, 'H');
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '-u2Ty' '-u2Tz'}, 0);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '0' '-u2Tz'}, 0);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', [0 0 0], 0);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '-u3Ty' '-u3Tz'}, 1);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '0' '-u3Tz'}, 1);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', [0 0 0], 1);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '-u4Ty' '-u4Tz'}, 2);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', {'0' '0' '-u4Tz'}, 2);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('Ga', [0 0 0], 2);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('f', 'alpha_N*(1-N)-beta_N*N', 0);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('f', 'alpha_M*(1-M)-beta_M*M', 1);
model.component('comp1').physics('ge2').feature('gfeq1').setIndex('f', 'alpha_H*(1-H)-beta_H* H', 2);

model.param.set('g_Na', '120000[uS/cm^2]');
model.param.set('g_K', '36000[uS/cm^2]');
model.param.set('g_L', '300[uS/cm^2]');
model.param.set('V_Na', '55[mV]');
model.param.set('V_K', '-72[mV]');
model.param.set('V_L', '-49.387[mV]');
model.param.set('Cm', '1[uF/cm^2]');
model.param.set('rho_i', '60[ohm*cm]');
model.param.set('sigma_e', '0.089[S/m]');
model.param.set('r', '0.0007[cm]');
model.param.set('I_stim', '15[mA]');

model.study.create('std3');
model.study('std3').create('time', 'Transient');
model.study('std3').feature('time').setSolveFor('/physics/ec', true);
model.study('std3').feature('time').setSolveFor('/physics/ec2', true);
model.study('std3').feature('time').setSolveFor('/physics/ge', true);
model.study('std3').feature('time').setSolveFor('/physics/ge2', true);
model.study.remove('std2');

model.func.create('rect1', 'Rectangle');
model.func('rect1').set('lower', 0.001);
model.func('rect1').set('upper', 0.005);
model.func('rect1').set('smooth', '1e-5');

model.component('comp1').physics('ec').feature('ncd2').set('nJ', '-I_stim*rect1(t[1/s])/(4[cm^2])');
model.component('comp1').physics('ec').create('lcs1', 'LineCurrentSource', 1);
model.component('comp1').physics('ec').feature('lcs1').set('Qjl', '2*pi*r*(Cm*Vmt+i_ion)');

model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 2.6, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').physics('ec').feature('lcs1').selection.set([81]);

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('i_Na', 'g_Na*M^3*H*(Vm-V_Na)');
model.component('comp1').variable('var1').set('i_K', 'g_K*N^4*(Vm-V_K)');
model.component('comp1').variable('var1').set('i_L', 'g_L*(Vm-V_L)');
model.component('comp1').variable('var1').set('i_ion', 'i_Na+i_K+i_L');
model.component('comp1').variable('var1').set('alpha_N', '(10[1/(mV*s)])*(Vm+(50[mV]))/(1-exp(-(Vm+(50[mV]))/(10[mV])))');
model.component('comp1').variable('var1').set('beta_N', '(125[1/s])*exp(-(Vm+(60[mV]))/(80[mV]))');
model.component('comp1').variable('var1').set('alpha_M', '(100[1/(mV*s)])*(Vm+(35[mV]))/(1-exp(-(Vm+(35[mV]))/(10[mV])))');
model.component('comp1').variable('var1').set('beta_M', '(4000[1/s])*exp(-(Vm+(60[mV]))/(18[mV]))');
model.component('comp1').variable('var1').set('alpha_H', '(70[1/s])*exp(-(Vm+(60[mV]))/(20[mV]))');
model.component('comp1').variable('var1').set('beta_H', '(1000[1/s])/(1+exp(-(Vm+(30[mV]))/(10[mV])))');
model.component('comp1').variable('var1').selection.geom('geom1', 1);
model.component('comp1').variable('var1').selection.set([81]);

model.component('comp1').physics('ge').feature('dir1').selection.all;
model.component('comp1').physics('ge').feature('dir1').selection.set([]);
model.component('comp1').physics('ge').selection.set([81]);
model.component('comp1').physics('ge').feature('dir1').selection.set([41 42]);
model.component('comp1').physics('ec').field('electricpotential').field('Ve');
model.component('comp1').physics('ge2').selection.set([81]);
model.component('comp1').physics('ge2').feature('init1').set('M', 0.0529);
model.component('comp1').physics('ge2').feature('init1').set('N', 0.3177);
model.component('comp1').physics('ge2').feature('init1').set('H', 0.5961);

model.study('std3').feature('time').set('tlist', 'range(0,0.0001,0.02)');

model.result('pg14').run;
model.result.remove('pg14');

model.sol.create('sol1');
model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0001,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'Default');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.result.create('pg1', 'PlotGroup3D');
model.result('pg1').label('Electric Potential (ec)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('data', 'dset1');
model.result('pg1').feature.create('vol1', 'Volume');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('solutionparams', 'parent');
model.result('pg1').feature('vol1').set('colortable', 'Dipole');
model.result('pg1').feature('vol1').set('showsolutionparams', 'on');
model.result('pg1').feature('vol1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg2').label('Electric Field Norm (ec)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('data', 'dset1');
model.result('pg2').feature.create('mslc1', 'Multislice');
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('solutionparams', 'parent');
model.result('pg2').feature('mslc1').set('expr', 'ec.normE');
model.result('pg2').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('mslc1').set('xcoord', 'ec.CPx');
model.result('pg2').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('mslc1').set('ycoord', 'ec.CPy');
model.result('pg2').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('mslc1').set('zcoord', 'ec.CPz');
model.result('pg2').feature('mslc1').set('colortable', 'Prism');
model.result('pg2').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg2').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg2').feature('mslc1').set('data', 'parent');
model.result('pg2').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg2').feature('strmsl1').set('expr', {'ec.Ex' 'ec.Ey' 'ec.Ez'});
model.result('pg2').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg2').feature('strmsl1').set('xcoord', 'ec.CPx');
model.result('pg2').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg2').feature('strmsl1').set('ycoord', 'ec.CPy');
model.result('pg2').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg2').feature('strmsl1').set('zcoord', 'ec.CPz');
model.result('pg2').feature('strmsl1').set('titletype', 'none');
model.result('pg2').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg2').feature('strmsl1').set('udist', 0.02);
model.result('pg2').feature('strmsl1').set('maxlen', 0.4);
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('inheritcolor', false);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg2').feature('strmsl1').set('maxtime', Inf);
model.result('pg2').feature('strmsl1').set('data', 'parent');
model.result('pg2').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg2').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg2').feature('strmsl1').feature('col1').set('expr', 'ec.normE');
model.result('pg2').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg2').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg2').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg2').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg2').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg2').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg3', 'PlotGroup3D');
model.result('pg3').set('data', 'dset1');
model.result('pg3').create('line1', 'Line');
model.result('pg3').feature('line1').set('expr', 'Vm');
model.result.create('pg4', 'PlotGroup3D');
model.result('pg4').set('data', 'dset1');
model.result('pg4').create('line1', 'Line');
model.result('pg4').feature('line1').set('expr', 'N');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').set('windowtitle', 'Graphics');
model.result('pg3').set('windowtitle', 'Graphics');
model.result('pg2').set('windowtitle', 'Graphics');
model.result('pg1').set('windowtitle', 'Graphics');
model.result.create('pg5', 'PlotGroup1D');
model.result('pg5').run;
model.result('pg5').create('lngr1', 'LineGraph');
model.result('pg5').feature('lngr1').set('data', 'dset1');
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('expr', 'Vm');
model.result('pg5').feature('lngr1').set('unit', 'mV');
model.result('pg5').feature('lngr1').selection.set([81]);

model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 2.8, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 3, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');

model.result('pg5').run;
model.result.export.create('anim1', 'Animation');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('plotgroup', 'pg5');
model.result.export('anim1').run;
model.result('pg3').run;

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0001,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result('pg5').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').run;
model.result.export.create('anim2', 'Animation');
model.result.export('anim2').set('target', 'player');
model.result.export('anim2').set('plotgroup', 'pg3');
model.result.export('anim2').run;
model.result.export('anim2').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').create('sel1', 'Selection');
model.result('pg1').feature('vol1').feature('sel1').selection.set([9]);
model.result('pg1').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 2);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0001,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.export('anim2').showFrame;
model.result.export('anim2').run;
model.result.export('anim1').showFrame;
model.result.export('anim2').showFrame;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('vol1').set('expr', 'Vm');
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim2').showFrame;
model.result('pg1').feature('vol1').set('expr', 'Ve');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result.export('anim2').showFrame;
model.result.export('anim2').run;
model.result.export('anim1').showFrame;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result('pg5').run;
model.result('pg4').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg1').run;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 3);
model.component('comp1').mesh('mesh1').run;

model.param.set('I_stim', '50[mA]');

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0001,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;

model.param.set('I_stim', '100[mA]');

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0001,0.02)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').run;
model.result.export('anim1').set('stopped', true);
model.result.export('anim1').run;
model.result.export('anim1').set('frametime', 0.01);
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim2').showFrame;
model.result.export('anim2').run;
model.result.export('anim2').run;
model.result.export('anim2').run;

model.label('standardStatic_HH_running.mph');

model.result.export('anim2').showFrame;

model.func('rect1').set('upper', '0.001 + (1/50)');
model.func('rect1').set('lower', 0.01);
model.func('rect1').set('upper', '0.01 + (1/50)');

model.study('std3').feature('time').set('tlist', 'range(0,0.001,0.04)');

model.sol('sol1').updateSolution;

model.result('pg1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;

model.study('std3').create('param', 'Parametric');

model.param.set('I_stim', '50[mA]');

model.study('std3').feature('param').setIndex('pname', 'g_Na', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'S/m^2', 0);
model.study('std3').feature('param').setIndex('pname', 'g_Na', 0);
model.study('std3').feature('param').setIndex('plistarr', '', 0);
model.study('std3').feature('param').setIndex('punit', 'S/m^2', 0);
model.study('std3').feature('param').setIndex('pname', 'I_stim', 0);
model.study('std3').feature('param').setIndex('plistarr', '50 60 70 80 90', 0);
model.study('std3').feature('param').setIndex('punit', 'mA', 0);

model.result('pg1').run;
model.result.export('anim2').showFrame;
model.result.export('anim2').run;

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch.create('p1', 'Parametric');
model.batch('p1').study('std3');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'none');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'50 60 70 80 90'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');

model.sol.create('sol2');
model.sol('sol2').study('std3');
model.sol('sol2').label('Parametric Solutions 1');

model.batch('p1').feature('so1').set('psol', 'sol2');

model.result.create('pg6', 'PlotGroup3D');
model.result('pg6').label('Electric Potential (ec) 1');
model.result('pg6').set('showlooplevel', {'off' 'off' 'off'});
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').set('data', 'dset2');
model.result('pg6').feature.create('vol1', 'Volume');
model.result('pg6').feature('vol1').set('showsolutionparams', 'on');
model.result('pg6').feature('vol1').set('solutionparams', 'parent');
model.result('pg6').feature('vol1').set('colortable', 'Dipole');
model.result('pg6').feature('vol1').set('showsolutionparams', 'on');
model.result('pg6').feature('vol1').set('data', 'parent');
model.result.create('pg7', 'PlotGroup3D');
model.result('pg7').label('Electric Field Norm (ec) 1');
model.result('pg7').set('showlooplevel', {'off' 'off' 'off'});
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').set('data', 'dset2');
model.result('pg7').feature.create('mslc1', 'Multislice');
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('solutionparams', 'parent');
model.result('pg7').feature('mslc1').set('expr', 'ec.normE');
model.result('pg7').feature('mslc1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('mslc1').set('xcoord', 'ec.CPx');
model.result('pg7').feature('mslc1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('mslc1').set('ycoord', 'ec.CPy');
model.result('pg7').feature('mslc1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('mslc1').set('zcoord', 'ec.CPz');
model.result('pg7').feature('mslc1').set('colortable', 'Prism');
model.result('pg7').feature('mslc1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('mslc1').set('colorcalibration', -0.8);
model.result('pg7').feature('mslc1').set('showsolutionparams', 'on');
model.result('pg7').feature('mslc1').set('data', 'parent');
model.result('pg7').feature.create('strmsl1', 'StreamlineMultislice');
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('solutionparams', 'parent');
model.result('pg7').feature('strmsl1').set('expr', {'ec.Ex' 'ec.Ey' 'ec.Ez'});
model.result('pg7').feature('strmsl1').set('multiplanexmethod', 'coord');
model.result('pg7').feature('strmsl1').set('xcoord', 'ec.CPx');
model.result('pg7').feature('strmsl1').set('multiplaneymethod', 'coord');
model.result('pg7').feature('strmsl1').set('ycoord', 'ec.CPy');
model.result('pg7').feature('strmsl1').set('multiplanezmethod', 'coord');
model.result('pg7').feature('strmsl1').set('zcoord', 'ec.CPz');
model.result('pg7').feature('strmsl1').set('titletype', 'none');
model.result('pg7').feature('strmsl1').set('posmethod', 'uniform');
model.result('pg7').feature('strmsl1').set('udist', 0.02);
model.result('pg7').feature('strmsl1').set('maxlen', 0.4);
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('inheritcolor', false);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('showsolutionparams', 'on');
model.result('pg7').feature('strmsl1').set('maxtime', Inf);
model.result('pg7').feature('strmsl1').set('data', 'parent');
model.result('pg7').feature('strmsl1').set('inheritplot', 'mslc1');
model.result('pg7').feature('strmsl1').feature.create('col1', 'Color');
model.result('pg7').feature('strmsl1').feature('col1').set('expr', 'ec.normE');
model.result('pg7').feature('strmsl1').feature('col1').set('colortable', 'PrismDark');
model.result('pg7').feature('strmsl1').feature('col1').set('colorlegend', false);
model.result('pg7').feature('strmsl1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('strmsl1').feature('col1').set('colorcalibration', -0.8);
model.result('pg7').feature('strmsl1').feature.create('filt1', 'Filter');
model.result('pg7').feature('strmsl1').feature('filt1').set('expr', '!isScalingSystemDomain');
model.result.create('pg8', 'PlotGroup3D');
model.result('pg8').set('data', 'dset2');
model.result('pg8').create('line1', 'Line');
model.result('pg8').feature('line1').set('expr', 'Vm');
model.result.create('pg9', 'PlotGroup3D');
model.result('pg9').set('data', 'dset2');
model.result('pg9').create('line1', 'Line');
model.result('pg9').feature('line1').set('expr', 'N');

model.batch('p1').run('compute');

model.result('pg6').run;
model.result('pg6').set('data', 'dset2');
model.result('pg7').set('data', 'dset2');
model.result.export('anim1').showFrame;
model.result('pg5').run;
model.result('pg5').set('data', 'dset2');
model.result('pg5').setIndex('looplevelinput', 'manualindices', 1);
model.result('pg5').setIndex('looplevelindices', 1, 1);
model.result('pg5').run;
model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').showFrame;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('lngr1').set('data', 'dset2');
model.result('pg5').feature('lngr1').setIndex('looplevelinput', 'manualindices', 1);
model.result('pg5').feature('lngr1').setIndex('looplevelindices', 1, 1);
model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').set('frametime', 0.001);
model.result.export('anim1').run;
model.result.export('anim1').set('frametime', 0.1);
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 5, 1);
model.result.export('anim1').run;

model.label('standardStatic_HH_finer.mph');

model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 5, 1);
model.result.export('anim1').run;
model.result.export('anim2').showFrame;
model.result.export('anim2').run;
model.result.export('anim2').set('framesel', 'all');
model.result.export('anim2').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;

model.component('comp1').geom('geom1').feature('wp1').geom.feature('pt1').setIndex('p', 2.65, 1);
model.component('comp1').geom('geom1').feature('wp1').geom.run('pt1');
model.component('comp1').geom('geom1').run('fin');

model.study('std3').feature('param').setIndex('plistarr', '56 57 58 59 60', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'56 57 58 59 60'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 5, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', 40, 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'40'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '42 44 46 48', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'42 44 46 48'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').set('stopped', true);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '49 50 51', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'49 50 51'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '55 56', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'55 56'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '53 53.5 54 54.5 55', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'53 53.5 54 54.5 55'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '51 51.5 52 52.5 53', 0);

model.sol('sol1').study('std3');

model.study('std3').feature('time').set('notlistsolnum', 1);
model.study('std3').feature('time').set('notsolnum', 'auto');
model.study('std3').feature('time').set('listsolnum', 1);
model.study('std3').feature('time').set('solnum', 'auto');

model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'51 51.5 52 52.5 53'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').run;

model.label('standardStatic_HH_finer.mph');

model.result.export('anim1').showFrame;
model.result('pg5').run;
model.result.export.create('anim3', 'Animation');
model.result.export('anim3').set('target', 'file');
model.result.export('anim3').set('plotgroup', 'pg5');
model.result.export('anim3').set('fps', 5);
model.result.export('anim3').setIndex('singlelooplevel', 3, 1);
model.result.export('anim3').set('framesel', 'all');
model.result.export('anim3').set('size', 'hd');
model.result.export('anim3').set('giffilename', 'G:\Mi unidad\Doctorado\Electrodos\Interferential\standard50Hz\Finer_activ.gif');
model.result.export('anim3').run;

model.label('standardStatic_HH_finer.mph');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 1);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'51 51.5 52 52.5 53'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 5, 1);
model.result.export('anim1').run;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '53.5 54 54.5 57', 0);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'53.5 54 54.5 57'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');

model.component('comp1').mesh('mesh1').create('ftet1', 'FreeTet');
model.component('comp1').mesh('mesh1').feature('size').set('hauto', 4);
model.component('comp1').mesh('mesh1').feature('auto_f1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('auto_f1').feature('size1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('auto_f1').feature('size1').selection.set([3 9]);
model.component('comp1').mesh('mesh1').feature('ftet1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftet1').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('auto_f1').selection.geom('geom1', 3);
model.component('comp1').mesh('mesh1').feature('auto_f1').selection.set([3 9]);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('auto_f1').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('auto_f1').feature('size1').selection.set([9]);
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'53.5 54 54.5 57'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '55.5 56 56.5 57', 0);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'55.5 56 56.5 57'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '52 53 54 55', 0);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'52 53 54 55'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 3, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 4, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', '54.5 55', 0);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'54.5 55'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;

model.label('standardStatic_HH_ExtFine.mph');

model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result.export.create('plot1', 'Plot');
model.result('pg5').run;
model.result('pg5').setIndex('looplevelindices', 2, 1);
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevelindices', 1, 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevelindices', 2, 1);
model.result('pg5').run;
model.result.export('plot1').set('plotgroup', 'pg5');
model.result.export('plot1').set('filename', 'actPot_ExtFine_55mA');
model.result.export('plot1').set('header', false);
model.result.export('plot1').set('sort', true);
model.result.export('plot1').run;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result('pg5').run;
model.result('pg5').set('data', 'dset1');
model.result('pg5').run;
model.result('pg5').set('data', 'dset2');
model.result('pg5').run;
model.result('pg5').setIndex('looplevelinput', 'last', 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevelinput', 'first', 1);
model.result('pg5').run;
model.result.export('anim2').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').showFrame;
model.result.export('anim1').run;
model.result.export('anim1').setIndex('singlelooplevel', 2, 1);
model.result.export('anim1').run;
model.result('pg5').run;
model.result('pg5').setIndex('looplevelinput', 'manualindices', 1);
model.result('pg5').setIndex('looplevelindices', 3, 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevelindices', 0, 1);
model.result('pg5').run;
model.result('pg5').setIndex('looplevelindices', 2, 1);
model.result('pg5').run;
model.result.create('pg10', 'PlotGroup1D');
model.result('pg10').run;
model.result('pg5').run;
model.result('pg5').run;
model.result('pg5').feature('lngr1').setIndex('looplevelindices', 2, 1);
model.result('pg5').run;
model.result.export('plot1').set('filename', 'actPot_ExtFine_55mA.txt');
model.result.export('plot1').run;

model.label('standardStatic_HH_ExtFine.mph');

model.result.export('anim1').showFrame;
model.result.export('anim1').setIndex('singlelooplevel', 1, 1);
model.result.export('anim1').run;

model.study('std3').feature('param').setIndex('plistarr', 57.5, 0);

model.sol('sol1').study('std3');
model.sol('sol1').feature.remove('t1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std3');
model.sol('sol1').feature('st1').set('studystep', 'time');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'time');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.001,0.04)');
model.sol('sol1').feature('t1').set('plot', 'off');
model.sol('sol1').feature('t1').set('plotgroup', 'pg1');
model.sol('sol1').feature('t1').set('plotfreq', 'tout');
model.sol('sol1').feature('t1').set('probesel', 'all');
model.sol('sol1').feature('t1').set('probes', {});
model.sol('sol1').feature('t1').set('probefreq', 'tsteps');
model.sol('sol1').feature('t1').set('atolglobalvaluemethod', 'factor');
model.sol('sol1').feature('t1').set('endtimeinterpolation', true);
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').create('seDef', 'Segregated');
model.sol('sol1').feature('t1').create('se1', 'Segregated');
model.sol('sol1').feature('t1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('t1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('segvar', {'comp1_Ve'});
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('t1').feature('i1').feature('mg1').set('coarseningmethod', 'classic');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('t1').feature('se1').feature('ss1').label('Electric Currents');
model.sol('sol1').feature('t1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('segvar', {'comp1_Vm' 'comp1_N' 'comp1_M' 'comp1_H'});
model.sol('sol1').feature('t1').feature('se1').feature('ss2').set('linsolver', 'dDef');
model.sol('sol1').feature('t1').feature('se1').feature('ss2').label('Merged Variables');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol('sol1').feature('t1').feature.remove('seDef');
model.sol('sol1').attach('std3');

model.batch('p1').feature.remove('so1');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('store', 'on');
model.batch('p1').feature('so1').set('clear', 'on');
model.batch('p1').feature('so1').set('psol', 'sol2');
model.batch('p1').set('pname', {'I_stim'});
model.batch('p1').set('plistarr', {'57.5'});
model.batch('p1').set('sweeptype', 'sparse');
model.batch('p1').set('probesel', 'all');
model.batch('p1').set('probes', {});
model.batch('p1').set('plot', 'off');
model.batch('p1').set('err', 'on');
model.batch('p1').attach('std3');
model.batch('p1').set('control', 'param');
model.batch('p1').run('compute');

model.result('pg5').setIndex('looplevelindices', 1, 1);
model.result('pg5').run;
model.result('pg5').feature('lngr1').setIndex('looplevelindices', 1, 1);
model.result('pg5').run;
model.result('pg10').run;
model.result('pg5').run;
model.result.export('plot1').set('filename', 'actPot_ExtFine_57mA.txt');
model.result.export('plot1').run;

model.label('standardStatic_HH_ExtFine.mph');

out = model;
